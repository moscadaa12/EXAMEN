"""
Gestor de Tareas Acad√©micas "EstudIA"
Aplicaci√≥n principal para gestionar tareas acad√©micas de estudiantes universitarios

Autor: EstudIA Team
Versi√≥n: 1.0
Fecha: 2025
"""

import sys
import os
from interfaz_usuario import InterfazUsuario


def verificar_requisitos():
    """
    Verifica que se cumplan los requisitos m√≠nimos para ejecutar la aplicaci√≥n.
    """
    try:
        # Verificar versi√≥n de Python
        if sys.version_info < (3, 6):
            print("‚ùå Error: Se requiere Python 3.6 o superior")
            print(f"   Versi√≥n actual: {sys.version}")
            return False
        
        # Verificar que los m√≥dulos necesarios est√©n disponibles
        import json
        import datetime
        from typing import List, Optional, Dict, Any
        
        print("‚úÖ Requisitos del sistema verificados correctamente")
        return True
        
    except ImportError as e:
        print(f"‚ùå Error: M√≥dulo requerido no encontrado: {e}")
        return False


def mostrar_informacion_aplicacion():
    """
    Muestra informaci√≥n sobre la aplicaci√≥n.
    """
    print("=" * 70)
    print("üéì GESTOR DE TAREAS ACAD√âMICAS 'ESTUDIA' üéì")
    print("=" * 70)
    print("üìö Versi√≥n: 1.0")
    print("üë• Desarrollado para estudiantes universitarios")
    print("üéØ Objetivo: Organizar y gestionar tareas acad√©micas de manera eficiente")
    print("=" * 70)
    print()
    print("üîß CARACTER√çSTICAS PRINCIPALES:")
    print("  ‚Ä¢ Registro de tareas con t√≠tulo, materia, fecha l√≠mite y prioridad")
    print("  ‚Ä¢ Sistema de recordatorios para tareas pr√≥ximas a vencer")
    print("  ‚Ä¢ Filtros avanzados (por materia, prioridad, estado)")
    print("  ‚Ä¢ Estad√≠sticas y reportes de progreso")
    print("  ‚Ä¢ Persistencia de datos en archivos JSON locales")
    print("  ‚Ä¢ Interfaz de usuario intuitiva y amigable")
    print()
    print("üìã REQUERIMIENTOS FUNCIONALES IMPLEMENTADOS:")
    print("  ‚úÖ Registrar tareas con todos los campos requeridos")
    print("  ‚úÖ Listar tareas con m√∫ltiples filtros")
    print("  ‚úÖ Marcar tareas como completadas/pendientes")
    print("  ‚úÖ Editar y eliminar tareas")
    print("  ‚úÖ Recordatorios de tareas pr√≥ximas a vencer")
    print("  ‚úÖ Persistencia ligera con archivos JSON")
    print()
    print("üèóÔ∏è CONCEPTOS DE PROGRAMACI√ìN IMPLEMENTADOS:")
    print("  ‚úÖ Estructuras secuenciales")
    print("  ‚úÖ Estructuras repetitivas (bucles)")
    print("  ‚úÖ Modularidad (separaci√≥n en clases y m√≥dulos)")
    print("  ‚úÖ Programaci√≥n Orientada a Objetos (POO)")
    print("  ‚úÖ Sin uso de base de datos (solo archivos locales)")
    print("=" * 70)


def main():
    """
    Funci√≥n principal de la aplicaci√≥n.
    """
    try:
        # Verificar requisitos del sistema
        if not verificar_requisitos():
            input("\nPresiona Enter para salir...")
            return
        
        # Mostrar informaci√≥n de la aplicaci√≥n
        mostrar_informacion_aplicacion()
        
        # Confirmar inicio de la aplicaci√≥n
        print("\nüöÄ ¬øDeseas iniciar la aplicaci√≥n? (s/n): ", end="")
        respuesta = input().lower().strip()
        
        if respuesta not in ['s', 'si', 's√≠', 'y', 'yes']:
            print("\nüëã ¬°Hasta luego! Gracias por tu inter√©s en EstudIA.")
            return
        
        # Inicializar y ejecutar la aplicaci√≥n
        print("\nüîÑ Iniciando EstudIA...")
        print("üìÅ Cargando datos de tareas...")
        
        app = InterfazUsuario()
        app.ejecutar()
        
    except KeyboardInterrupt:
        print("\n\nüëã ¬°Aplicaci√≥n interrumpida por el usuario!")
        print("   Gracias por usar EstudIA. ¬°Hasta pronto!")
        
    except Exception as e:
        print(f"\n‚ùå Error inesperado en la aplicaci√≥n: {e}")
        print("   Por favor, reporta este error para mejorar la aplicaci√≥n.")
        input("\nPresiona Enter para salir...")
    
    finally:
        print("\nüéì ¬°Gracias por usar EstudIA!")
        print("   ¬°Que tengas un excelente rendimiento acad√©mico!")


if __name__ == "__main__":
    main()
